from fastapi import FastAPI, UploadFile, File, HTTPException
from dotenv import load_dotenv
import httpx
import os

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ Hugging Face —Ç–æ–∫–µ–Ω–∞ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
HUGGINGFACE_TOKEN = os.getenv("HF_TOKEN")
HUGGINGFACE_API_URL = "https://api-inference.huggingface.co/models/Falconsai/nsfw_image_detection"

# –û—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç API: POST /moderate
@app.post("/moderate")
async def moderate_image(file: UploadFile = File(...)):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ MIME-—Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    if file.content_type not in ["image/jpeg", "image/png"]:
        raise HTTPException(status_code=400, detail="Invalid file type")

    # –ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç—ã
    image_bytes = await file.read()

    # –ë–∞–∑–æ–≤—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    headers = {
        "Content-Type": "application/octet-stream",
    }

    if HUGGINGFACE_TOKEN:
        headers["Authorization"] = f"Bearer {HUGGINGFACE_TOKEN}"

    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                HUGGINGFACE_API_URL,
                content=image_bytes,
                headers=headers,
                timeout=60.0 #—É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–≥—Ä–µ–≤–∞ –º–æ–¥–µ–ª–∏(—á—Ç–æ–±—ã –¥–∞—Ç—å –ø–æ–¥–µ–ª–∏ –ø—Ä–æ—Å–Ω—É—Ç—å—Å—è)
            )

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –æ—Ç–≤–µ—Ç–∞
            if response.status_code != 200:
                print("‚ö†Ô∏è Hugging Face response code:", response.status_code)
                print("‚ö†Ô∏è Hugging Face response text:", response.text)
                raise HTTPException(status_code=500, detail="Hugging Face API error")

            # –î–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è JSON-–æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏
            results = response.json()
            print("–û—Ç–≤–µ—Ç HF:", results)

            # –ò–∑–≤–ª–µ–∫–∞–µ–º nsfw_score
            nsfw_score = 0.0
            for item in results:
                if item.get("label") == "nsfw":
                    nsfw_score = item.get("score", 0.0)
                    break

            print("NSFW Score:", nsfw_score)

            if nsfw_score > 0.7:
                return {"status": "REJECTED", "reason": "NSFW content"}
            else:
                return {"status": "OK"}


    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        print("üõë –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞:", e)
        raise HTTPException(status_code=500, detail=str(e))
